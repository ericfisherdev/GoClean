name: Prevent Reverse Pull Requests

on:
  pull_request:
    types: [opened, reopened]
    branches:
      - develop

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  check-pr-direction:
    runs-on: ubuntu-latest
    steps:
    - name: Check if PR is from release to develop
      id: check_direction
      env:
        HEAD_REF: ${{ github.event.pull_request.head.ref }}
        BASE_REF: ${{ github.event.pull_request.base.ref }}
      run: |
        
        echo "Head branch: ${HEAD_REF}"
        echo "Base branch: ${BASE_REF}"
        
        # Check if this is a release -> develop PR
        if [[ "${HEAD_REF}" == "release" && "${BASE_REF}" == "develop" ]]; then
          echo "reverse_pr=true" >> $GITHUB_OUTPUT
          echo "❌ Detected reverse PR: release -> develop"
        else
          echo "reverse_pr=false" >> $GITHUB_OUTPUT
          echo "✅ PR direction is correct"
        fi

    - name: Close reverse PR and add comment
      if: steps.check_direction.outputs.reverse_pr == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          // Close the PR
          await github.rest.pulls.update({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.payload.pull_request.number,
            state: 'closed'
          });

          // Add explanatory comment
          const comment = "🚫 **This pull request has been automatically closed**\n\n" +
                          "### ❌ Incorrect Branch Direction\n" +
                          "This PR attempts to merge from `release` → `develop`, which goes against our Git workflow.\n\n" +
                          "### ✅ Correct Git Flow\n" +
                          "Our repository follows this branching strategy:\n" +
                          "- **Feature branches** → `develop` (for new features)\n" +
                          "- **`develop`** → `release` (for releases)\n" +
                          "- **`release`** → `main` (for final releases)\n\n" +
                          "### 🔄 What you probably meant to do:\n" +
                          "If you want to:\n\n" +
                          "1. **Merge a release to main**: Create a PR from `release` → `main`\n" +
                          "2. **Start new development**: Create a feature branch from `develop`\n" +
                          "3. **Backport a fix**: Cherry-pick specific commits to `develop`\n\n" +
                          "### 📚 Git Workflow Reference:\n" +
                          "```\n" +
                          "feature-branch ──→ develop ──→ release ──→ main\n" +
                          "                     ↑                      ↑\n" +
                          "               (new features)         (releases)\n" +
                          "```\n\n" +
                          "### 🆘 Need Help?\n" +
                          "If this closure was incorrect or you need assistance with the proper workflow, please:\n" +
                          "- Comment on this PR explaining your intent\n" +
                          "- Contact the repository maintainers\n" +
                          "- Review the contribution guidelines\n\n" +
                          "---\n" +
                          "*This action was performed automatically to maintain proper Git workflow.*";

          await github.rest.issues.createComment({
            issue_number: context.payload.pull_request.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

          // Add labels for tracking
          try {
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              labels: ['invalid', 'workflow-violation', 'auto-closed']
            });
          } catch (error) {
            console.log('Could not add labels (they may not exist)');
          }

    - name: Log action taken
      env:
        HEAD_REF: ${{ github.event.pull_request.head.ref }}
        BASE_REF: ${{ github.event.pull_request.base.ref }}
      run: |
        if [[ "${{ steps.check_direction.outputs.reverse_pr }}" == "true" ]]; then
          echo "🚫 Closed reverse PR #${{ github.event.pull_request.number }}"
          echo "   From: ${HEAD_REF}"
          echo "   To: ${BASE_REF}"
        else
          echo "✅ PR direction is valid - no action needed"
        fi