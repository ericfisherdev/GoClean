name: Auto Tag Release

on:
  pull_request:
    types: [closed]
    branches:
      - release

jobs:
  tag-release:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Read version from VERSION file
        id: get_version
        run: |
          if [ -f VERSION ]; then
            VERSION=$(cat VERSION | tr -d '\n')
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "Found version: $VERSION"
          else
            echo "ERROR: VERSION file not found"
            exit 1
          fi
          
      - name: Check if tag already exists
        id: check_tag
        run: |
          VERSION="${{ steps.get_version.outputs.version }}"
          if git tag -l | grep -q "^v${VERSION}$"; then
            echo "Tag v${VERSION} already exists"
            echo "tag_exists=true" >> $GITHUB_OUTPUT
          else
            echo "Tag v${VERSION} does not exist"
            echo "tag_exists=false" >> $GITHUB_OUTPUT
          fi
          
      - name: Create and push tag
        if: steps.check_tag.outputs.tag_exists == 'false'
        run: |
          VERSION="${{ steps.get_version.outputs.version }}"
          TAG_NAME="v${VERSION}"
          
          # Configure git
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Create annotated tag
          git tag -a "$TAG_NAME" -m "Release $TAG_NAME"
          
          # Push tag
          git push origin "$TAG_NAME"
          
          echo "Created and pushed tag: $TAG_NAME"
          
      - name: Create GitHub Release
        if: steps.check_tag.outputs.tag_exists == 'false'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          release_name: GoClean v${{ steps.get_version.outputs.version }}
          body: |
            ## GoClean v${{ steps.get_version.outputs.version }}
            
            This release was automatically created when PR #${{ github.event.pull_request.number }} was merged into the release branch.
            
            ### Changes
            ${{ github.event.pull_request.title }}
            
            For detailed changes, see the [pull request](${{ github.event.pull_request.html_url }}).
          draft: false
          prerelease: false
          
      - name: Skip - Tag already exists
        if: steps.check_tag.outputs.tag_exists == 'true'
        run: |
          VERSION="${{ steps.get_version.outputs.version }}"
          echo "Skipping tag creation - v${VERSION} already exists"